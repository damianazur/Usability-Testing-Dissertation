[{"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\index.js":"1","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\App.js":"3","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\services\\auth.service.js":"4","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\modal\\modalTemplate.js":"5","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\modalContainer.component.js":"6","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\modalButton.component.js":"7","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\testContainer.component.js":"8","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\forms\\deleteProjectForm.js":"9","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\forms\\createProjectForm.js":"10","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\forms\\deleteTestForm.js":"11","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\dropdownGenerator.component.js":"12","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\register.component.js":"13","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\home.component.js":"14","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\login.component.js":"15","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\dashboard.component.js":"16","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\services\\server.service.js":"17","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\createTest.component.js":"18","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\taskCreate.component.js":"19","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\services\\store.js":"20","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\dynamicList.component.js":"21","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\textQuestionCreate.component.js":"22","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\mutliplechoiceQuestion.component.js":"23","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\viewTestDetails.component.js":"24","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\viewTestResults.component.js":"25","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\tabs.component.js":"26","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\tabs\\testResultOverview.component.js":"27","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\tabs\\testResultRecordings.component.js":"28","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\taskGrading.component.js":"29","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\videoBars.component.js":"30","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\utilities\\utils.js":"31","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\modal\\infoModalUtilities.js":"32","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\forms\\infoForms.js":"33"},{"size":496,"mtime":1611156966634,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":3484,"mtime":1615249519893,"results":"37","hashOfConfig":"35"},{"size":986,"mtime":1613331433867,"results":"38","hashOfConfig":"35"},{"size":1295,"mtime":1615312233173,"results":"39","hashOfConfig":"35"},{"size":1618,"mtime":1615314107685,"results":"40","hashOfConfig":"35"},{"size":352,"mtime":1611444886079,"results":"41","hashOfConfig":"35"},{"size":7916,"mtime":1615316640077,"results":"42","hashOfConfig":"35"},{"size":1477,"mtime":1615309941920,"results":"43","hashOfConfig":"35"},{"size":1102,"mtime":1615312457923,"results":"44","hashOfConfig":"35"},{"size":1028,"mtime":1611501102606,"results":"45","hashOfConfig":"35"},{"size":1623,"mtime":1613396456531,"results":"46","hashOfConfig":"35"},{"size":5000,"mtime":1614783458210,"results":"47","hashOfConfig":"35"},{"size":712,"mtime":1611498967784,"results":"48","hashOfConfig":"35"},{"size":3873,"mtime":1611501247814,"results":"49","hashOfConfig":"35"},{"size":8817,"mtime":1615245930198,"results":"50","hashOfConfig":"35"},{"size":4111,"mtime":1614796247106,"results":"51","hashOfConfig":"35"},{"size":12325,"mtime":1615310638523,"results":"52","hashOfConfig":"35"},{"size":3244,"mtime":1615310657753,"results":"53","hashOfConfig":"35"},{"size":196,"mtime":1611528152074,"results":"54","hashOfConfig":"35"},{"size":2871,"mtime":1614779514382,"results":"55","hashOfConfig":"35"},{"size":2506,"mtime":1615310814703,"results":"56","hashOfConfig":"35"},{"size":3490,"mtime":1615311312464,"results":"57","hashOfConfig":"35"},{"size":5360,"mtime":1614782473557,"results":"58","hashOfConfig":"35"},{"size":1020,"mtime":1613228803283,"results":"59","hashOfConfig":"35"},{"size":2604,"mtime":1613324282490,"results":"60","hashOfConfig":"35"},{"size":12363,"mtime":1614784726393,"results":"61","hashOfConfig":"35"},{"size":11303,"mtime":1615318110172,"results":"62","hashOfConfig":"35"},{"size":3109,"mtime":1614703951932,"results":"63","hashOfConfig":"35"},{"size":13093,"mtime":1615318613807,"results":"64","hashOfConfig":"35"},{"size":624,"mtime":1615249410145,"results":"65","hashOfConfig":"35"},{"size":1056,"mtime":1615310602909,"results":"66","hashOfConfig":"35"},{"size":6800,"mtime":1615319127583,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"rjy0kx",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\index.js",[],["141","142"],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\App.js",["143"],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\services\\auth.service.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\modal\\modalTemplate.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\modalContainer.component.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\modalButton.component.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\testContainer.component.js",["144","145","146"],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\forms\\deleteProjectForm.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\forms\\createProjectForm.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\forms\\deleteTestForm.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\dropdownGenerator.component.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\register.component.js",["147"],"import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport \"styles/form.css\";\r\n\r\nimport AuthService from \"services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.username,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"loginFormContainer\">\r\n          <h2 id=\"formHeading\">Register</h2>\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"inputGroup\">\r\n                  <label className=\"fullWidth\" htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"inputField\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"inputGroup\">\r\n                  <label className=\"fullWidth\" htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"inputField\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"inputGroup\">\r\n                  <button className=\"primaryButton centerElement\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"inputGroup\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n\r\n                  {this.state.successful == true ? (\r\n                    <button onClick={() => {\r\n                      this.props.history.push({\r\n                        pathname: 'login'\r\n                      });\r\n                      window.location.reload();\r\n                      }} type=\"button\" className=\"primaryButton\">Login\r\n                    </button>\r\n                  ) : (\r\n                    null\r\n                  )}\r\n\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\home.component.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\login.component.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\dashboard.component.js",["148","149","150"],"import React, { Component, createRef } from \"react\";\r\n\r\nimport { CreateProjectForm } from 'forms/createProjectForm';\r\nimport { DeleteProjectForm } from 'forms/deleteProjectForm';\r\nimport Server from \"services/server.service\";\r\nimport ModalContainer from \"components/modalContainer.component\";\r\nimport TestContainer from \"components/testContainer.component\";\r\nimport DropdownGenerator from \"components/dropdownGenerator.component\";\r\n\r\nimport \"bootstrap.min.css\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Popup for creating a project\r\n    this._createProjectModal = React.createRef();\r\n    this._deleteProjectModal = React.createRef();\r\n\r\n    this.state = {\r\n      projects: [],\r\n      tests: [],\r\n      selectedProject: {\r\n        projectName: \"Choose Project\",\r\n        projectId: undefined\r\n      },\r\n      testContainers: []\r\n    };\r\n  }\r\n\r\n  update() {\r\n    console.log(\"Dashboard rerender update\");\r\n    if (this.state.selectedProject.projectId !== undefined) {\r\n      this.updateTestList(this.state.selectedProject.projectId);\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    console.log(\"DASHBOARD MOUNTED\");\r\n    var state = localStorage.getItem('dashboardExitState');\r\n\r\n    this.updateProjectList();\r\n\r\n    console.log(state)\r\n\r\n    if (state) {\r\n      state = JSON.parse(state);\r\n      this.setState(state, this.postStateRestore);\r\n    } \r\n  }\r\n\r\n  postStateRestore() {\r\n    console.log(this.state.selectedProject);\r\n    if (this.state.selectedProject && this.state.selectedProject.projectId) {\r\n      this.updateTestList(this.state.selectedProject.projectId)\r\n    }\r\n  }\r\n\r\n  async componentWillUnmount() {\r\n    localStorage.setItem('dashboardExitState', JSON.stringify(this.state));\r\n  }\r\n\r\n  updateProjectList() {\r\n    Server.getProjectList().then(response => {\r\n      this.setState({projects: response.data});\r\n    });\r\n  }\r\n\r\n  updateTestList(projectId) {\r\n    Server.getTestList(projectId).then(response => {\r\n      console.log(response.data);\r\n      this.setState({tests: response.data}, () => {\r\n        // this.displayTests();\r\n      });\r\n    });\r\n  }\r\n  \r\n  renderLoadingState = () => (\r\n    <div className=\"post-loading\">\r\n      Loading...\r\n    </div>\r\n  )\r\n\r\n  onProjectSelect(params) {\r\n    params = JSON.parse(params);\r\n    let projectName = params.projectName;\r\n\r\n    console.log(\"Selected project: \", params)\r\n\r\n    this.updateTestList(params.projectId);\r\n    this.setState({selectedProject: {\r\n      projectName: params.projectName,\r\n      projectId: params.projectId\r\n    }});\r\n  }\r\n\r\n  generateProjectDropdown = (onSelectFunction, selectedProjectState) => {\r\n    let projects = this.state.projects;\r\n    let menuItems = [];\r\n\r\n    for(let i = 0; i < projects.length; i++) {\r\n      let project = projects[i];\r\n      let item = {};\r\n\r\n      item.name = project.projectName;\r\n      item.params = {\r\n        projectName: project.projectName,\r\n        projectId: project.projectId\r\n      };\r\n      item.onSelectFunction = onSelectFunction;\r\n\r\n      menuItems.push(item);\r\n    }\r\n\r\n    return (\r\n      <DropdownGenerator data={menuItems} initalText={selectedProjectState}></DropdownGenerator>\r\n    )\r\n  }\r\n\r\n  createProjectSubmit(e) {\r\n    e.preventDefault();\r\n    let projectName = e.target.projectName.value\r\n\r\n    console.log(\"Project submit!\", e, projectName);\r\n\r\n    this._createProjectModal.current.setState({isShown: false});\r\n    Server.createProject(projectName).then(response => {\r\n      console.log(response);\r\n      this.updateProjectList();\r\n    });\r\n  }\r\n\r\n  deleteProjectSubmit(e) {\r\n    e.preventDefault();\r\n    let projectId = e.target.deleteProjectId.value\r\n\r\n    if (projectId === undefined || projectId === null || projectId === \"\") {\r\n      return;\r\n    }\r\n\r\n    console.log(\"Project delete!\", projectId);\r\n\r\n    this._deleteProjectModal.current.setState({isShown: false});\r\n    Server.deleteProject(projectId).then(response => {\r\n      console.log(response);\r\n      this.updateProjectList();\r\n    });\r\n  }\r\n\r\n  deleteTestSubmit(e) {\r\n    e.preventDefault();\r\n    let testId = e.target.testId.value\r\n\r\n    if (testId === undefined || testId === null || testId === \"\") {\r\n      return;\r\n    }\r\n\r\n    console.log(\"Test delete!\", testId);\r\n\r\n    // this._deleteProjectModal.current.setState({isShown: false});\r\n    // Server.deleteProject(projectId).then(response => {\r\n    //   console.log(response);\r\n    //   this.updateProjectList();\r\n    // });\r\n  }\r\n\r\n  displayTests() {\r\n    console.log(this.state.selectedProject);\r\n    // console.log(this.state.tests);\r\n    let tests = this.state.tests;\r\n\r\n    if (!tests) {\r\n      return(undefined);\r\n    }\r\n\r\n    var renderItems = [];\r\n    // var key = this.state.containerKey;\r\n    for(let i = 0; i < tests.length; i++) {\r\n      let test = tests[i];\r\n\r\n      console.log(\"Test: \", test.testName);\r\n\r\n      var key = new Date().getTime() + i;\r\n      renderItems.push(\r\n        <TestContainer \r\n          key={key} \r\n          history={this.props.history} \r\n          parentUpdate={this.update.bind(this)} \r\n          onDelete={this.deleteTestSubmit.bind(this)} \r\n          testItem={test}>          \r\n        </TestContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      renderItems\r\n    )\r\n  }\r\n\r\n  renderCreateTestButton() {\r\n    return (\r\n      <button onClick={() => {\r\n        this.props.history.push({\r\n          pathname: 'create-test',\r\n          state: { projectId: this.state.selectedProject.projectId, projectName: this.state.selectedProject.projectName}\r\n        });\r\n        window.location.reload();\r\n        }} type=\"button\" className=\"secondaryButton button1\">Create Usability Test\r\n      </button>\r\n    );\r\n  }\r\n\r\n  render() {  \r\n\r\n    console.log(\"RENDER\", this.state);\r\n    console.log(this.state.testContainers)\r\n\r\n    const projects = this.state.projects;\r\n\r\n    if (projects) {\r\n      return (\r\n        <div className=\"mainPageDiv\">\r\n          <h1>Dashboard</h1>\r\n          <hr></hr>\r\n          <div className=\"post-content\">  \r\n            <ModalContainer \r\n              Form={CreateProjectForm} \r\n              ref={this._createProjectModal} \r\n              buttonClassName=\"secondaryButton button1\" \r\n              triggerText={\"Create a Project\"} \r\n              onSubmit={this.createProjectSubmit.bind(this)}\r\n            />   \r\n\r\n            {this.state.projects.length > 0 ? (\r\n              <span>\r\n                {/* <label style={{marginRight: \"15px\"}}>Select Project:</label> */}\r\n                {this.generateProjectDropdown(this.onProjectSelect.bind(this), this.state.selectedProject.projectName)}\r\n\r\n                <ModalContainer \r\n                  Form={DeleteProjectForm} \r\n                  ref={this._deleteProjectModal} \r\n                  buttonClassName=\"secondaryButton deleteButton\" \r\n                  triggerText={\"Delete a Project\"}\r\n                  onSubmit={this.deleteProjectSubmit.bind(this)}\r\n                  generateProjectDropdown={this.generateProjectDropdown.bind(this)}\r\n                />\r\n\r\n                {this.state.selectedProject.projectId && this.state.tests.length > 0 ? (\r\n                  <span>\r\n                    {this.renderCreateTestButton()}\r\n                  </span>\r\n                ) : (\r\n                  null\r\n                )}\r\n\r\n                <div>\r\n                    <div>\r\n                      {this.state.selectedProject.projectId && (\r\n                        <h2 style={{width: \"100%\"}}>Usability Tests</h2>\r\n                      )}\r\n\r\n                      {this.state.tests && this.state.tests.length > 0 ? (\r\n                        <div>\r\n                          <div className=\"testContainer\">\r\n                            {/* {this.state.testContainers} */}\r\n                            {this.displayTests()}\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <h3>Please create a usability test for this project</h3>\r\n                      )}\r\n\r\n                      {this.state.selectedProject.projectId && this.state.tests.length == 0 ? (\r\n                        <span>\r\n                          {this.renderCreateTestButton()}\r\n                        </span>\r\n                      ) : (\r\n                        null\r\n                      )}\r\n                    </div>\r\n                 \r\n\r\n                  {this.state.selectedProject ? (\r\n                    <div>\r\n                      \r\n                    </div>\r\n                  ):(\r\n                    <h2>You have no tests created</h2>\r\n                  )}\r\n                </div>\r\n              </span>       \r\n             ) : (\r\n              <h2>You have no projects created</h2>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return this.renderLoadingState();\r\n    }\r\n\r\n  }\r\n}","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\services\\server.service.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\createTest.component.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\taskCreate.component.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\services\\store.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\dynamicList.component.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\textQuestionCreate.component.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\mutliplechoiceQuestion.component.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\viewTestDetails.component.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\views\\viewTestResults.component.js",["151"],"import React, { Component } from 'react';\r\n\r\nimport TabGenerator from \"components/tabs.component\"\r\nimport TestResultOverviewTab from \"tabs/testResultOverview.component\"\r\nimport TestResultRecordingsTab from \"tabs/testResultRecordings.component\"\r\n\r\nexport class ViewTestResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n  render() {\r\n    let testId = this.props.location.state.testId;\r\n\r\n    var sendData = [\r\n      {\r\n        label: \"Overview\",\r\n        tabComponent: TestResultOverviewTab\r\n      }, {\r\n        label: \"Recordings\",\r\n        tabComponent: TestResultRecordingsTab\r\n      }\r\n    ];\r\n    \r\n    return (\r\n      <div className=\"mainPageDiv\">\r\n          <h1>Test Results: {this.props.location.state.testName}</h1>\r\n          <hr></hr>\r\n          <div className=\"post-content\">  \r\n            <TabGenerator\r\n              data={sendData}\r\n              testId={testId}\r\n            ></TabGenerator>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewTestResults;\r\n","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\tabs.component.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\tabs\\testResultOverview.component.js",["152","153","154"],"import React, { Component } from 'react';\r\nimport Server from \"services/server.service\";\r\n// import ApexCharts from 'apexcharts'\r\nimport Chart from \"react-apexcharts\";\r\n\r\nexport class TestResultOverviewTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isShown: true,\r\n      taskGradeData: {},\r\n      questionAnswerData: {},\r\n      instanceData: [],\r\n\r\n      taskChartList: [],\r\n      overallChart: [],\r\n      answerChartList: [],\r\n      textAnswerList: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // console.log(\"Props\", this.props);\r\n    this.updateInstanceData(this.props.testId);\r\n    this.updateTaskGrades(this.props.testId);\r\n    this.updateQuestionAnswers(this.props.testId);\r\n  }\r\n\r\n  updateTaskGrades(testId) {\r\n    Server.getTasksAndGrades(testId).then(response => {\r\n      // console.log(response.data);\r\n      this.setState({\r\n        taskGradeData: response.data}, () => {\r\n          this.renderTaskCharts(\"chartPerTask\", \"taskChartList\");\r\n          this.renderTaskCharts(\"overall\", \"overallChart\");\r\n        });\r\n    });\r\n  }\r\n\r\n  updateQuestionAnswers(testId) {\r\n    Server.getQuestionAndAnswers(testId).then(response => {\r\n      // console.log(response.data);\r\n      this.setState({\r\n        questionAnswerData: response.data}, () => {\r\n          this.renderAnswerCharts();\r\n        });\r\n    });\r\n  }\r\n\r\n  updateInstanceData(testId) {\r\n    Server.getTestInstances(testId).then(response => {\r\n      // console.log(response.data);\r\n      this.setState({\r\n        instanceData: response.data}\r\n      )\r\n    });\r\n  }\r\n\r\n  getTaskSettings() {\r\n    var colors = ['#55FF32', '#ff3232', '#B2B2B2'];\r\n    var strokeColors = ['#4FE52D', '#E52D2D', '#999999'];\r\n\r\n    var options = {\r\n      chart: {\r\n        height: 350,\r\n        type: 'bar',\r\n        events: {\r\n          click: function(chart, w, e) {\r\n            // console.log(chart, w, e)\r\n          }\r\n        },\r\n      },\r\n      colors: colors,\r\n      plotOptions: {\r\n        bar: {\r\n          borderRadius: 6,\r\n          columnWidth: '45%',\r\n          distributed: true,\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 1,\r\n        colors: strokeColors\r\n      },\r\n      legend: {\r\n        show: false\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          [\"Pass\"],\r\n          [\"Fail\"],\r\n          [\"Not Graded\"], \r\n        ],\r\n        labels: {\r\n          style: {\r\n            colors: '#000000',\r\n            fontSize: '16px'\r\n          }\r\n        }\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: '#000000',\r\n            fontSize: '16px'\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  parseTaskGradeData() {\r\n    var parsedChartData = {\r\n      totalGradeCount: {},\r\n      individualTaskCounts: []\r\n    };\r\n    var tasks = this.state.taskGradeData[\"tasks\"];\r\n    var grades = this.state.taskGradeData[\"grades\"];\r\n    var totalGradeCount = {\r\n      \"Pass\": 0,\r\n      \"Fail\": 0,\r\n      \"Not Graded\": 0\r\n    }\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      var task = tasks[i];\r\n      \r\n      var individualTaskCount = {\r\n        \"Task\": task,\r\n        \"Pass\": 0,\r\n        \"Fail\": 0,\r\n        \"Not Graded\": 0\r\n      }\r\n\r\n      for (let j = 0; j < grades.length; j++) {\r\n        var grade = grades[j];\r\n        if (grade[\"taskId\"] === task[\"taskId\"]) {\r\n          var gradeName = grade[\"grade\"];\r\n          individualTaskCount[gradeName] += 1;\r\n          totalGradeCount[gradeName] += 1;\r\n        }\r\n      }\r\n\r\n      parsedChartData[\"individualTaskCounts\"].push(individualTaskCount);\r\n    }\r\n\r\n    parsedChartData[\"totalGradeCount\"] = totalGradeCount\r\n\r\n    return parsedChartData;\r\n  }\r\n\r\n  renderTaskCharts(type, listName) {\r\n    var options = this.getTaskSettings()\r\n    var parsedChartData = this.parseTaskGradeData();\r\n\r\n    var taskChartList = [];    \r\n\r\n    if (type == \"chartPerTask\") {\r\n      var individualTaskCounts = parsedChartData[\"individualTaskCounts\"]\r\n\r\n      for (let i = 0; i < individualTaskCounts.length; i++) {\r\n        var gradeCount = individualTaskCounts[i]\r\n\r\n        // console.log(gradeCount);\r\n\r\n        var series = [{\r\n          data: [gradeCount[\"Pass\"], gradeCount[\"Fail\"], gradeCount[\"Not Graded\"]]\r\n        }];\r\n        \r\n        taskChartList.push(\r\n          <div key={i} style={{display: \"inline-block\", \"marginRight\": \"30px\"}}>\r\n            <h3 className=\"chartHeading\">\r\n            [{gradeCount[\"Task\"][\"sequenceNumber\"] + 1}] {gradeCount[\"Task\"][\"taskName\"]}\r\n            </h3>\r\n            <Chart\r\n              options={options}\r\n              series={series}\r\n              type=\"bar\"\r\n              className=\"genericChart barChart\"\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n\r\n    } else if (type == \"overall\") {\r\n      var totalCount = parsedChartData[\"totalGradeCount\"]\r\n\r\n      var series = [{\r\n        data: [totalCount[\"Pass\"], totalCount[\"Fail\"], totalCount[\"Not Graded\"]]\r\n      }];\r\n\r\n      taskChartList.push(\r\n        <div key={0} style={{display: \"inline-block\", \"marginRight\": \"30px\"}}>\r\n          <h3 className=\"chartHeading\">\r\n            Success Rate Across All Tasks\r\n          </h3>\r\n          <h4 style={{marginBottom: \"5px\"}}>No. of Tasks Completed by all Participants: {totalCount[\"Pass\"] + totalCount[\"Fail\"] + totalCount[\"Not Graded\"]}</h4>\r\n          <Chart\r\n            options={options}\r\n            series={series}\r\n            type=\"bar\"\r\n            className=\"genericChart barChart\"\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    this.setState({[listName]: taskChartList});\r\n  }\r\n\r\n  getPieChartOptions() {\r\n    var options = {\r\n      chart: {\r\n        type: 'pie'\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          startAngle: 0,\r\n          endAngle: 360,\r\n          expandOnClick: true,\r\n          offsetX: -10,\r\n          offsetY: 10,\r\n          customScale: 1,\r\n          dataLabels: {\r\n              offset: -10,\r\n              minAngleToShowLabel: 0\r\n          }, \r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: true,\r\n        textAnchor: 'end',\r\n        style: {\r\n          fontSize: '16px',\r\n          colors: [\"#000000\"],\r\n          fontWeight: 'bold',\r\n        },\r\n        dropShadow: {\r\n          enabled: false,\r\n        },\r\n      },\r\n      legend: {\r\n        fontSize: \"16px\",\r\n        horizontalAlign: 'right',\r\n        width: 200,\r\n      }\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  createTextAnswerBox(answers, question) {\r\n    var answerList = [];\r\n\r\n    for (let j = 0; j < answers.length; j++) {\r\n      var answerObj = answers[j];\r\n      if (answerObj[\"questionId\"] === question[\"questionId\"]) {\r\n        var answer = JSON.parse(answerObj[\"answerJSON\"])[\"answer\"];\r\n        answerList.push(\r\n          <div key={j}>\r\n            <span style={{\"fontWeight\": \"none\"}}>{answer}</span>\r\n            <hr style={{\"margin\": \"5px 0 5px\"}}></hr>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    // console.log(answerList);\r\n\r\n    return(\r\n      <div>\r\n        {answerList}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  createMultipleChoicePieChart(options, answers, question) {\r\n    var questionConfigsJSON = JSON.parse(question[\"questionConfigsJSON\"]);\r\n\r\n    // Create a dictionary with all the answer options and their count\r\n    var labelsAndCount = {};\r\n    var choices = questionConfigsJSON[\"choices\"];\r\n    for (let n = 0; n < choices.length; n++) {\r\n      let choice = choices[n][\"value\"];\r\n      labelsAndCount[choice] = 0;\r\n    }\r\n    // Iterate over answers and if the questionId matches then increment the value of the answer\r\n    for (let j = 0; j < answers.length; j++) {\r\n      var answerObj = answers[j];\r\n      if (answerObj[\"questionId\"] === question[\"questionId\"]) {\r\n        var answer = JSON.parse(answerObj[\"answerJSON\"])[\"answer\"];\r\n        labelsAndCount[answer] += 1;\r\n      }\r\n    }\r\n\r\n    var series = [];\r\n    var labels = [];\r\n    Object.keys(labelsAndCount).forEach(function(key) {\r\n      labels.push(key);\r\n      series.push(labelsAndCount[key]);\r\n    });\r\n    options.labels = labels\r\n\r\n    // console.log(\"Creating Chart!\", options, options.labels, series);\r\n\r\n    var pieChart = \r\n      <Chart\r\n        options={options}\r\n        series={series}\r\n        type=\"pie\"\r\n        className=\"genericChart pieChart\"\r\n      />\r\n    \r\n    return pieChart;\r\n  }\r\n\r\n  renderAnswerCharts() {\r\n    var answerChartList = [];\r\n    var textAnswerList = [];\r\n    var questions = this.state.questionAnswerData[\"questions\"];\r\n    var answers = this.state.questionAnswerData[\"answers\"];\r\n\r\n    // Iterate over questions\r\n    for (let i = 0; i < questions.length; i++) {\r\n      var options = this.getPieChartOptions();\r\n      var question = questions[i];\r\n      var questionConfigsJSON = JSON.parse(question[\"questionConfigsJSON\"]);\r\n      \r\n      // Show multiple choice questions\r\n      if (questionConfigsJSON[\"questionType\"] === \"multiple-choice\") {\r\n        var pieChart = this.createMultipleChoicePieChart(options, answers, question);\r\n\r\n        answerChartList.push(\r\n          <div key={i} className=\"pieChartContainer\">\r\n            <h3 className=\"chartHeading\" >\r\n              [{question[\"sequenceNumber\"] + 1}] Question: <i>{questionConfigsJSON[\"questionText\"]}</i>\r\n            </h3>\r\n            {pieChart}\r\n          </div>\r\n        );\r\n\r\n      } else if (questionConfigsJSON[\"questionType\"] === \"text\") {\r\n        var textAnswerBox = this.createTextAnswerBox(answers, question);\r\n        \r\n        // console.log(textAnswerBox);\r\n\r\n        textAnswerList.push(\r\n          <div key={i} className=\"textAnswerContainer\">\r\n              <h3 className=\"chartHeading\">\r\n                [{question[\"sequenceNumber\"] + 1}] Question: <i>{questionConfigsJSON[\"questionText\"]}</i>\r\n              </h3>\r\n              <h4  style={{display: \"block\", textAlign: \"left\", margin: \"5px 0 5px\"}}>Answers: </h4>\r\n              <div style={{\"backgroundColor\": \"white\", \"padding\": \"5px 15px 15px\", overflow: \"auto\", maxHeight: \"250px\"}}>\r\n                {textAnswerBox}\r\n              </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    this.setState({answerChartList: answerChartList});\r\n    this.setState({textAnswerList: textAnswerList});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.isShown ? (\r\n          <div>\r\n            <h2>Details</h2>\r\n            <hr className=\"hr2\"></hr>\r\n            <h3>No. of Participants: {this.state.instanceData.length}</h3>\r\n\r\n            {this.state.taskGradeData[\"tasks\"] ? (\r\n              <h3>No. of Tasks: {this.state.taskGradeData[\"tasks\"].length}</h3>\r\n            ) : (\r\n              null\r\n            )}\r\n            {this.state.questionAnswerData[\"questions\"] ? (\r\n              <h3>No. of Questions: {this.state.questionAnswerData[\"questions\"].length}</h3>\r\n            ) : (\r\n              null\r\n            )}\r\n            <hr></hr>\r\n\r\n            {this.state.instanceData.length > 0 ? (\r\n              <span>\r\n                <br></br>\r\n                <div className=\"chartHolder\">\r\n                  <h2>Overall Task Success Rate</h2>\r\n                  <hr className=\"hr2\"></hr>\r\n                  {this.state.overallChart}\r\n                </div>\r\n\r\n                <br></br>\r\n                <div className=\"chartHolder\">\r\n                  <h2>Individual Task Performance</h2>\r\n                  <hr className=\"hr2\"></hr>\r\n                  {this.state.taskChartList}\r\n                </div>\r\n\r\n                <br></br>\r\n                <div className=\"chartHolder\">\r\n                  <h2>Multiple-Choice Question Answers</h2>\r\n                  <hr className=\"hr2\"></hr>\r\n                  {this.state.answerChartList}\r\n                </div>\r\n\r\n                <br></br>\r\n                <div className=\"chartHolder\">\r\n                  <h2>Text Question Answers</h2>\r\n                  <hr className=\"hr2\"></hr>\r\n                  {this.state.textAnswerList}\r\n                </div>\r\n              </span>\r\n            ) : ( \r\n              <span>\r\n                <h3>There is no data to display as no participants have taken the test.</h3>\r\n                <hr></hr>\r\n              </span>\r\n            )}\r\n          </div>  \r\n        ) : ( \r\n          null\r\n        )}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TestResultOverviewTab;\r\n","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\tabs\\testResultRecordings.component.js",["155"],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\taskGrading.component.js",["156","157"],"import React, { Component } from 'react';\r\nimport Server from \"services/server.service\";\r\n\r\nexport class TaskGrading extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      gradeButtons: [],\r\n      currentGrade: this.props.data.grade\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  setGrade(taskGradeId, grade) {\r\n    console.log(taskGradeId, grade);\r\n\r\n    Server.updateTaskGrade(taskGradeId, grade).then(response => {\r\n      console.log(response.data);\r\n      this.setState({\r\n        taskGradeData: response.data}, () => {\r\n          if (response.data == 1) {\r\n            this.setState({currentGrade: grade});\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  generateButtons() {\r\n    // console.log(this.state.currentGrade);\r\n\r\n    var buttons = [];\r\n\r\n    var data = this.props.data;\r\n    var currentGrade = this.state.currentGrade;\r\n    var buttonDataList = [\r\n      {\r\n        buttonLabel: \"Fail\",\r\n        style: {backgroundColor: \"#FF5B5E\", border: \"1px solid red\"}\r\n      },\r\n      {\r\n        buttonLabel: \"Pass\",\r\n        style: {backgroundColor: \"#8BFF5E\", border: \"1px solid green\"}\r\n      },\r\n      {\r\n        buttonLabel: \"Not Graded\",\r\n        style: {backgroundColor: \"#779BFF\", border: \"1px solid blue\"}\r\n      }\r\n    ];\r\n\r\n    var key = 0;\r\n    buttonDataList.forEach(buttonData => {\r\n      var style = {};\r\n      if (currentGrade == buttonData.buttonLabel) {\r\n        style = buttonData.style;\r\n      }\r\n      buttons.push (\r\n        <button key={key} onClick={this.setGrade.bind(this, data.taskGradeId, buttonData.buttonLabel)} className=\"gradingButtons\" style={style}>\r\n          {buttonData.buttonLabel}\r\n        </button>\r\n      )\r\n      key += 1;\r\n    });\r\n\r\n    return buttons;\r\n  }\r\n\r\n  generateTaskText() {\r\n    var data = this.props.data;\r\n    // console.log(data);\r\n    var stepsJSON = JSON.parse(data.stepsJSON);\r\n    // console.log(stepsJSON);\r\n\r\n    var taskStepsList = [];\r\n\r\n    var key = 0;\r\n    for (let i = 0; i < stepsJSON.length; i++) {\r\n      taskStepsList.push(\r\n        <label key={key} style={{display: \"block\", textAlign:\"left\", paddingLeft: \"10px\"}}>{stepsJSON[i][\"value\"]}</label>\r\n      )\r\n      key += 1;\r\n    }\r\n    for (let i = 0; i < stepsJSON.length; i++) {\r\n      taskStepsList.push(\r\n        <label key={key} style={{display: \"block\", textAlign:\"left\", paddingLeft: \"10px\"}}>{stepsJSON[i][\"value\"]}</label>\r\n      )\r\n      key += 1;\r\n    }\r\n\r\n    return taskStepsList;\r\n  }\r\n\r\n  render() {\r\n    var data = this.props.data;\r\n    // console.log(data);\r\n  \r\n    return (\r\n      <div className=\"taskGradeBox\">\r\n        Task: <h4 style={{display: 'inline-block', margin: \"0 0 20px\"}}>{data.taskName}</h4>\r\n        <div>\r\n          <div readOnly style={{width: \"95%\", height: \"100px\", border: \"1px solid gray\", borderRadius: \"3px\", marginBottom: \"15px\", overflow: \"auto\"}}>\r\n            {this.generateTaskText()}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {this.generateButtons()}\r\n          {/* {this.state.gradeButtons} */}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskGrading;\r\n","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\components\\videoBars.component.js",["158","159"],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\utilities\\utils.js",["160","161","162","163","164","165"],"import {NotificationContainer, NotificationManager} from 'react-notifications';\r\n\r\nexport function createNotification(type, message) {\r\n  switch (type) {\r\n    case 'info':\r\n      alert = NotificationManager.info(message, 'Info', 3000);\r\n      break;\r\n    case 'success':\r\n      alert = NotificationManager.success(message, 'Success', 3000);\r\n      break;\r\n    case 'warning':\r\n      alert = NotificationManager.warning(message, 'Warning', 3000);\r\n      break;\r\n    case 'error':\r\n      alert = NotificationManager.error(message, 'Error', 5000, () => {\r\n        console.log(\"Error callback\");\r\n      });\r\n      break;\r\n  }\r\n}","C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\modal\\infoModalUtilities.js",[],"C:\\Users\\New User\\Desktop\\Fourth Year\\Usability_Testing_FYP\\WebApp\\usabcheck\\frontend\\src\\forms\\infoForms.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":3,"column":32,"nodeType":"172","messageId":"173","endLine":3,"endColumn":51},{"ruleId":"174","severity":1,"message":"175","line":118,"column":40,"nodeType":"176","messageId":"177","endLine":118,"endColumn":42},{"ruleId":"174","severity":1,"message":"175","line":121,"column":47,"nodeType":"176","messageId":"177","endLine":121,"endColumn":49},{"ruleId":"170","severity":1,"message":"178","line":193,"column":11,"nodeType":"172","messageId":"173","endLine":193,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":161,"column":42,"nodeType":"176","messageId":"177","endLine":161,"endColumn":44},{"ruleId":"170","severity":1,"message":"179","line":1,"column":28,"nodeType":"172","messageId":"173","endLine":1,"endColumn":37},{"ruleId":"170","severity":1,"message":"180","line":86,"column":9,"nodeType":"172","messageId":"173","endLine":86,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":273,"column":88,"nodeType":"176","messageId":"177","endLine":273,"endColumn":90},{"ruleId":"181","severity":1,"message":"182","line":8,"column":3,"nodeType":"183","messageId":"184","endLine":11,"endColumn":4},{"ruleId":"174","severity":1,"message":"175","line":165,"column":14,"nodeType":"176","messageId":"177","endLine":165,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":192,"column":21,"nodeType":"176","messageId":"177","endLine":192,"endColumn":23},{"ruleId":"185","severity":1,"message":"186","line":195,"column":11,"nodeType":"172","messageId":"187","endLine":195,"endColumn":17},{"ruleId":"188","severity":1,"message":"189","line":259,"column":9,"nodeType":"190","endLine":266,"endColumn":27},{"ruleId":"174","severity":1,"message":"175","line":25,"column":29,"nodeType":"176","messageId":"177","endLine":25,"endColumn":31},{"ruleId":"174","severity":1,"message":"175","line":57,"column":24,"nodeType":"176","messageId":"177","endLine":57,"endColumn":26},{"ruleId":"185","severity":1,"message":"191","line":303,"column":11,"nodeType":"172","messageId":"187","endLine":303,"endColumn":25},{"ruleId":"185","severity":1,"message":"192","line":309,"column":11,"nodeType":"172","messageId":"187","endLine":309,"endColumn":14},{"ruleId":"170","severity":1,"message":"193","line":1,"column":9,"nodeType":"172","messageId":"173","endLine":1,"endColumn":30},{"ruleId":"194","severity":1,"message":"195","line":4,"column":3,"nodeType":"196","messageId":"197","endLine":19,"endColumn":4},{"ruleId":"166","severity":1,"message":"198","line":6,"column":7,"nodeType":"172","messageId":"199","endLine":6,"endColumn":12},{"ruleId":"166","severity":1,"message":"198","line":9,"column":7,"nodeType":"172","messageId":"199","endLine":9,"endColumn":12},{"ruleId":"166","severity":1,"message":"198","line":12,"column":7,"nodeType":"172","messageId":"199","endLine":12,"endColumn":12},{"ruleId":"166","severity":1,"message":"198","line":15,"column":7,"nodeType":"172","messageId":"199","endLine":15,"endColumn":12},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'NotificationManager' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'stats' is assigned a value but never used.","'createRef' is defined but never used.","'projectName' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-redeclare","'series' is already defined.","redeclared","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'legendDataList' is already defined.","'key' is already defined.","'NotificationContainer' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Read-only global 'alert' should not be modified.","nativeReassign","no-global-assign","no-unsafe-negation"]